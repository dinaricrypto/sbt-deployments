#  workflow pipeline
name: publish-latest

on:
  push:
    branches:
      - main

jobs:
  publish-package:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ vars.DEPLOY_AGENT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_AGENT_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::875886734390:role/npm-repository-publisher-20230503234619423000000002
          role-duration-seconds: 3600

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "yarn"

      - name: Enable Node Corepack
        run: corepack enable

      - name: Install packages
        run: yarn install

      - name: Generate version for Typescript
        id: package-version
        run: echo "PACKAGE_VERSION=$(yarn run ci:publish:build:gen-version)" >> $GITHUB_OUTPUT

      - name: Set package version for Typescript
        run: yarn ci:publish:build:set-version ${{ steps.package-version.outputs.PACKAGE_VERSION }}

      - name: Build Typescript library
        run: yarn ci:publish:build:typescript

      - name: Login to Typescript repository
        run: yarn ci:publish:login:typescript

      - name: Publish Typescript library
        run: npm publish

      - name: Build scripts for packaging Python
        run: yarn build:scripts

      - name: Build Python library
        run: yarn ci:publish:build:python

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          twine
          --user

      - name: Publish Python library
        working-directory: ./dist-python
        run: |
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain sbt-dev --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain sbt-dev --repository sbt --format pypi --query repositoryEndpoint --output text`
          python -m build --sdist --wheel --outdir dist/ .
          twine upload dist/*
